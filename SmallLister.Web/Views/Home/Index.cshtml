@model SmallLister.Web.Model.Home.IndexViewModel

<aside>
    <nav>
        <ul>
            @foreach (var list in Model.Lists) {
            <li class="@list.CssClass"><a href="/?list=@list.UserListId">@list.Name (@list.ItemCount)</a></li>
            }
        </ul>
    </nav>
</aside>

<article>
    <span class="sml-toolbar">
    @{
    var isUserList = !Model.IsAllListSelected && !Model.IsDueListSelected;
    }
    @if (Model.HasUndoAction) {
        <a href="/history/undo" title="Undo @Model.UndoAction">Undo</a>
        @if (Model.HasRedoAction || isUserList) {
        <text> | </text>
        }
    }
    @if (Model.HasRedoAction) {
        <a href="/history/redo" title="Redo @Model.RedoAction">Redo</a>
        @if (isUserList) {
        <text> | </text>
        }
    }
    @if (isUserList) {
        <text>Sort by: </text>
        @if (Model.SelectedList.ItemSortOrder == SmallLister.Model.ItemSortOrder.DueDate) {
        <text>due date</text>
        } else {
        <a href="/?sort=@SmallLister.Model.ItemSortOrder.DueDate">due date</a>
        }
        <text> / </text>
        @if (Model.SelectedList.ItemSortOrder == SmallLister.Model.ItemSortOrder.Description) {
        <text>description</text>
        } else {
        <a href="/?sort=@SmallLister.Model.ItemSortOrder.Description">description</a>
        }
    }
    </span>
    <h2>@Model.SelectedList.Name</h2>

    <ul class="sml-list" data-baseuri="/api/v1/items">
        <li class="sml-list">
            @if (Model.Items.Any()) {
            <ul class="sml-list-item">
            @foreach (var item in Model.Items) {
                <li class="@item.AppendDueCssClass("sml-list-item")" data-listitem="@item.UserItemId">
                    <div>
                        @if (!Model.IsAllListSelected && !Model.IsDueListSelected) {
                        <img class="sml-list-item-drag-handle" src="/images/drag.png" height="26" width="22" title="Move" />
                        }
                    </div>
                    <div>
                        <div>@item.Description</div>
                        <div class="sml-list-item-notes">@item.Notes</div>
                        
                        <form method="post" action="/items/done/@item.UserItemId">
                        @Html.AntiForgeryToken()
                        <button title="Done"><img src="/images/tick.png" height="15" width="15" /> Done</button>
                        </form>
                        <button title="Edit" data-href="/items/@item.UserItemId"><img src="/images/notes.png" height="15" width="15" /> Edit</button>
                    </div>
                    <div title="@item.Due">@item.DueSummary<br/><span>@item.RepeatSummary</span></div>
                </li>
            }
            </ul>
            } else {
            <text>Nothing on this list, you're all done.</text>
            }
        </li>
    </ul>

    @if (Model.Pagination.PageCount > 1) {
    <div class="pagination">
        @if (Model.Pagination.PageNumber > 1) {
        <a href="/?pageNumber=@(Model.Pagination.PageNumber - 1)">&laquo;</a>
        }
        @foreach (var pg in Model.Pagination.Pages) {
        @if (pg.IsSelected) {
        <a class="pagination-active">@pg.PageNumber</a>
        } else {
        <a href="/?pageNumber=@pg.PageNumber">@pg.PageNumber</a>
        }
        @if (pg.IsNextPageSkipped) {
        <span>&bull;&bull;</span>
        }
        }
        @if (Model.Pagination.PageNumber < Model.Pagination.PageCount) {
        <a href="/?pageNumber=@(Model.Pagination.PageNumber + 1)">&raquo;</a>
        }
    </div>
    }

    <div>
    <form name="sml-list-add" method="post" action="/items/add">
    @Html.AntiForgeryToken()
    <fieldset>
    <legend>Add to list</legend>
        <div>
        <label for="sml-list-add-list">List:</label>
        <select id="sml-list-add-list" name="list" class="sml-list-add-list">
            @foreach (var list in Model.Lists.Where(l => l.CanAddItems)) {
                @if (list.UserListId == Model.SelectedList.UserListId) {
            <option value="@list.UserListId" selected="selected">@list.Name</option>
                } else {
            <option value="@list.UserListId">@list.Name</option>
                }
            }
        </select>
    </div>
    <div>
        <label for="sml-list-add-description">Description:</label>
        <input type="text" id="sml-list-add-description" name="description" class="sml-list-add-description" />
    </div>
    <div>
        <label for="sml-list-add-due">Due:</label>
        <input type="text" id="sml-list-add-due" name="due" class="sml-list-add-due" />
    </div>
    <div>        
        <label for="sml-list-add-repeat">Repeat:</label>
        <select id="sml-list-add-repeat" name="repeat" class="sml-list-add-repeat" data-depends="input.sml-list-add-due">
            <option value="" selected="selected">None</option>
            <option value="daily">Every day</option>
            <option value="dailyExcludingWeekend">Every day except Saturday and Sunday</option>
            <option value="weekends">Every Saturday and Sunday</option>
            <option value="weekly">Every week</option>
            <option value="biweekly">Every 2 weeks</option>
            <option value="triweekly">Every 3 weeks</option>
            <option value="monthly">Every month</option>
            <option value="lastDayMonthly">On the last day of every month</option>
            <option value="biMonthly">Every 2 months</option>
            <option value="quarterly">Every 3 months</option>
            <option value="halfYearly">Every 6 months</option>
            <option value="yearly">Every year</option>
        </select>
    </div>
    <div>
        <label for="sml-list-add-notes">Notes:</label>
        <textarea id="sml-list-add-notes" name="notes" class="sml-list-add-notes" wrap="off"></textarea>
    </div>
    <div>
        <label></label>
        <button type="submit" data-depends="input.sml-list-add-description">Add</button>
    </div>
    </fieldset>
    </form>
    </div>
</article>

@section Scripts {
<script type="text/javascript">
    $(function() { 
        let dueDateSelector = 'form[name="sml-list-add"] input.sml-list-add-due';
        pickmeup(dueDateSelector, {
            default_date: false,
            hide_on_select: true,
            format: 'Y-m-d'
        });
        $(dueDateSelector).on('change input paste keyup', function() {
            let dueDate = $(this).val();
            if (dueDate !== null && dueDate.match(/^\s*$/) === null)
                return;
            pickmeup(dueDateSelector).hide();
            pickmeup(dueDateSelector).set_date(new Date);
            $('form[name="sml-list-add"] select.sml-list-add-repeat').val('none');
        });
    });
</script>
}